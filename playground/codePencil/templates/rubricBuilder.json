{
  "html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Rubric Builder</title>\n  <style>\n    body {\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n      max-width: 1500px;\n      margin: 2rem auto;\n      padding: 1rem;\n      background-color: #f5f7fa;\n      color: #333;\n    }\n    h1 {\n      text-align: center;\n      font-size: 2rem;\n      color: #4a90e2;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-bottom: 2rem;\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n      background-color: #ffffff;\n      border-radius: 8px;\n      overflow: hidden;\n    }\n    th, td {\n      padding: 1.2rem;\n      text-align: left;\n      border-bottom: 1px solid #e0e0e0;\n      word-wrap: break-word;\n      word-break: break-word;\n    }\n    th {\n      background-color: #4a90e2;\n      color: #fff;\n      text-transform: uppercase;\n      font-weight: bold;\n      white-space: nowrap;\n    }\n    tr:nth-child(even) {\n      background-color: #f9f9f9;\n    }\n    tr:last-child td {\n      border-bottom: none;\n    }\n    input[type=\"text\"], textarea {\n      width: 100%;\n      padding: 0.75rem;\n      margin-top: 0.5rem;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      font-size: 1rem;\n      box-sizing: border-box;\n      transition: border-color 0.3s;\n    }\n    input[type=\"text\"]:focus, textarea:focus {\n      border-color: #4a90e2;\n      outline: none;\n    }\n    textarea {\n      resize: vertical;\n    }\n    button {\n      padding: 0.5rem 1.5rem;\n      margin: 0.5rem;\n      border: none;\n      background-color: #007bff;\n      color: #fff;\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 1rem;\n      transition: background-color 0.3s;\n    }\n    button:hover {\n      background-color: #0056b3;\n    }\n    button.remove-button {\n      background-color: #dc3545;\n    }\n    button.remove-button:hover {\n      background-color: #c82333;\n    }\n    @media print {\n      #add-criteria, #print-rubric, #theme-selector, #export-json, th:last-child, td:last-child {\n        display: none;\n      }\n      th, td {\n        padding: 1rem;\n        font-size: 0.9rem;\n      }\n      table {\n        width: 100%;\n      }\n    }\n  </style>\n</head>\n<body>\n  <h1 contenteditable=\"true\">Rubric Builder</h1>\n  <table id=\"rubric-table\">\n    <thead>\n      <tr>\n        <th>Criteria</th>\n        <th>Poor [1]</th>\n        <th>Needs Improvement [2]</th>\n        <th>Acceptable [3]</th>\n        <th>Good [4]</th>\n        <th>Excellent [5]</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody id=\"rubric-body\"></tbody>\n  </table>\n  <button id=\"add-criteria\">Add Criteria</button>\n  <button id=\"print-rubric\">Print Rubric</button>\n  <select id=\"theme-selector\">\n    <option value=\"default\">Default Theme</option>\n    <option value=\"dark\">Dark Theme</option>\n    <option value=\"light\">Light Theme</option>\n  </select>\n  <button id=\"export-json\">Export to JSON</button>\n\n  <script>\n    document.getElementById('add-criteria').addEventListener('click', function() {\n      addCriteria();\n    });\n\n    document.getElementById('print-rubric').addEventListener('click', function() {\n      // Hide actions and buttons before printing\n      document.querySelectorAll('#add-criteria, #print-rubric, #theme-selector, #export-json').forEach(btn => btn.style.display = 'none');\n      document.querySelectorAll('th:last-child, td:last-child').forEach(cell => cell.style.display = 'none');\n      \n      window.print();\n\n      // Restore visibility after printing\n      document.querySelectorAll('#add-criteria, #print-rubric, #theme-selector, #export-json').forEach(btn => btn.style.display = 'inline-block');\n      document.querySelectorAll('th:last-child, td:last-child').forEach(cell => cell.style.display = 'table-cell');\n    });\n\n    document.getElementById('theme-selector').addEventListener('change', function() {\n      const selectedTheme = this.value;\n      applyTheme(selectedTheme);\n    });\n\n    function applyTheme(selectedTheme) {\n      if (selectedTheme === 'dark') {\n        document.body.style.backgroundColor = '#333';\n        document.body.style.color = '#fff';\n        document.querySelector('table').style.backgroundColor = '#444';\n        document.querySelectorAll('th').forEach(th => th.style.backgroundColor = '#555');\n      } else if (selectedTheme === 'light') {\n        document.body.style.backgroundColor = '#f0f0f0';\n        document.body.style.color = '#333';\n        document.querySelector('table').style.backgroundColor = '#fff';\n        document.querySelectorAll('th').forEach(th => th.style.backgroundColor = '#4a90e2');\n      } else {\n        document.body.style.backgroundColor = '#f5f7fa';\n        document.body.style.color = '#333';\n        document.querySelector('table').style.backgroundColor = '#ffffff';\n        document.querySelectorAll('th').forEach(th => th.style.backgroundColor = '#4a90e2');\n      }\n    }\n\n    function addCriteria() {\n      const tbody = document.getElementById('rubric-body');\n      const row = document.createElement('tr');\n\n      const criteriaCell = document.createElement('td');\n      criteriaCell.innerHTML = `<input type=\"text\" placeholder=\"Enter criteria description\">`;\n      row.appendChild(criteriaCell);\n\n      for (let i = 1; i <= 5; i++) {\n        const levelCell = document.createElement('td');\n        levelCell.innerHTML = `<textarea placeholder=\"Enter description for level ${i}\"></textarea>`;\n        row.appendChild(levelCell);\n      }\n\n      const saveButton = document.createElement('button');\n      saveButton.textContent = 'Save Criteria';\n      saveButton.addEventListener('click', function() {\n        saveCriteria(row);\n      });\n\n      const removeButton = document.createElement('button');\n      removeButton.textContent = 'Remove Criteria';\n      removeButton.classList.add('remove-button');\n      removeButton.addEventListener('click', function() {\n        tbody.removeChild(row);\n      });\n\n      const actionCell = document.createElement('td');\n      actionCell.appendChild(saveButton);\n      actionCell.appendChild(removeButton);\n      row.appendChild(actionCell);\n\n      tbody.appendChild(row);\n    }\n\n    function saveCriteria(row) {\n      const inputs = row.querySelectorAll('input, textarea');\n      inputs.forEach(input => {\n        const text = document.createElement('span');\n        text.textContent = input.value;\n        input.parentNode.replaceChild(text, input);\n      });\n\n      const saveButton = row.querySelector('button');\n      if (saveButton) {\n        const editButton = document.createElement('button');\n        editButton.textContent = 'Edit Criteria';\n        editButton.addEventListener('click', function() {\n          editCriteria(row);\n        });\n        saveButton.parentNode.replaceChild(editButton, saveButton);\n      }\n\n      // Autosave to local storage\n      saveRubricToLocalStorage();\n    }\n\n    function editCriteria(row) {\n      const spans = row.querySelectorAll('span');\n      spans.forEach(span => {\n        const input = document.createElement('textarea');\n        input.value = span.textContent;\n        span.parentNode.replaceChild(input, span);\n      });\n\n      const editButton = row.querySelector('button');\n      if (editButton) {\n        const saveButton = document.createElement('button');\n        saveButton.textContent = 'Save Criteria';\n        saveButton.addEventListener('click', function() {\n          saveCriteria(row);\n        });\n        editButton.parentNode.replaceChild(saveButton, editButton);\n      }\n    }\n\n    // Autosave feature\n    function saveRubricToLocalStorage() {\n      const rubricRows = document.querySelectorAll('#rubric-body tr');\n      const rubricData = Array.from(rubricRows).map(row => {\n        const cells = row.querySelectorAll('td');\n        return Array.from(cells).map(cell => cell.textContent.trim());\n      });\n      localStorage.setItem('rubricData', JSON.stringify(rubricData));\n    }\n\n    function loadRubricFromLocalStorage() {\n      const savedRubric = localStorage.getItem('rubricData');\n      if (savedRubric) {\n        const rubricData = JSON.parse(savedRubric);\n        rubricData.forEach(dataRow => {\n          const tbody = document.getElementById('rubric-body');\n          const row = document.createElement('tr');\n\n          dataRow.forEach((cellData, index) => {\n            const cell = document.createElement('td');\n            if (index === dataRow.length - 1) {\n              const editButton = document.createElement('button');\n              editButton.textContent = 'Edit Criteria';\n              editButton.addEventListener('click', function() {\n                editCriteria(row);\n              });\n              const removeButton = document.createElement('button');\n              removeButton.textContent = 'Remove Criteria';\n              removeButton.classList.add('remove-button');\n              removeButton.addEventListener('click', function() {\n                tbody.removeChild(row);\n                saveRubricToLocalStorage();\n              });\n              cell.appendChild(editButton);\n              cell.appendChild(removeButton);\n            } else {\n              const span = document.createElement('span');\n              span.textContent = cellData;\n              cell.appendChild(span);\n            }\n            row.appendChild(cell);\n          });\n\n          tbody.appendChild(row);\n        });\n      }\n    }\n\n    // Load saved rubric when page is loaded\n    window.addEventListener('load', loadRubricFromLocalStorage);\n\n    // Export to JSON feature\n    document.getElementById('export-json').addEventListener('click', exportToJSON);\n    function exportToJSON() {\n      const rubricRows = document.querySelectorAll('#rubric-body tr');\n      const rubricData = Array.from(rubricRows).map(row => {\n        const cells = row.querySelectorAll('td');\n        return Array.from(cells).map(cell => cell.textContent.trim());\n      });\n      const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(rubricData, null, 2));\n      const downloadAnchor = document.createElement('a');\n      downloadAnchor.setAttribute(\"href\", dataStr);\n      downloadAnchor.setAttribute(\"download\", \"rubric.json\");\n      document.body.appendChild(downloadAnchor);\n      downloadAnchor.click();\n      document.body.removeChild(downloadAnchor);\n    }\n  </script>\n</body>\n</html>\n",
  "css": "",
  "js": ""
}