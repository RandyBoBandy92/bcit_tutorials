{
  "html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Intermediate JavaScript Quiz</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            background-color: #f0f0f0;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            margin: 0;\n        }\n        .container {\n            background-color: #fff;\n            padding: 20px;\n            border-radius: 8px;\n            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n            width: 600px;\n            text-align: center;\n        }\n        .instructions {\n            margin-bottom: 20px;\n            font-size: 1.1em;\n        }\n        button {\n            padding: 10px 20px;\n            background-color: #007bff;\n            color: white;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n        }\n        button:hover {\n            background-color: #0056b3;\n        }\n        .result {\n            margin-top: 20px;\n            font-weight: bold;\n        }\n        .test-result {\n            margin-top: 10px;\n            color: #333;\n        }\n        .navigation {\n            margin-top: 20px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div id=\"question\"></div>\n        <button onclick=\"runTest()\">Run Test</button>\n        <div id=\"result\" class=\"result\"></div>\n        <div id=\"testResults\"></div>\n        <div class=\"navigation\">\n            <button onclick=\"previousQuestion()\">Previous</button>\n            <button onclick=\"nextQuestion()\">Next</button>\n        </div>\n    </div>\n\n</body>\n</html>\n",
  "css": "",
  "js": "// Write Your Code Here...\n\n\n// TESTS\n\n        const questions = [\n            {\n                description: `Your Objective: Write a function named <code>reverseWords</code> that takes a string as an argument and returns the string with each word reversed but the word order kept intact.<br>\n                Example: <code>reverseWords(\"Hello World\")</code> should return <code>\"olleH dlroW\"</code>.`,\n                functionName: 'reverseWords',\n                testCases: [\n                    { input: \"Hello World\", expected: \"olleH dlroW\" },\n                    { input: \"JavaScript is fun\", expected: \"tpircSavaJ si nuf\" },\n                    { input: \"\", expected: \"\" },\n                    { input: \"A B C\", expected: \"A B C\" }\n                ]\n            },\n            {\n                description: `Your Objective: Write a function named <code>findDuplicates</code> that takes an array and returns an array of duplicates, without repeating the duplicate values.<br>\n                Example: <code>findDuplicates([1, 2, 3, 4, 5, 1, 2, 3])</code> should return <code>[1, 2, 3]</code>.`,\n                functionName: 'findDuplicates',\n                testCases: [\n                    { input: [[1, 2, 3, 4, 5, 1, 2, 3]], expected: [1, 2, 3] },\n                    { input: [[\"a\", \"b\", \"a\", \"c\", \"d\", \"c\"]], expected: [\"a\", \"c\"] },\n                    { input: [[1, 2, 3]], expected: [] },\n                    { input: [[]], expected: [] }\n                ]\n            },\n            {\n                description: `Your Objective: Write a function named <code>isAnagram</code> that takes two strings and returns <code>true</code> if they are anagrams of each other, <code>false</code> otherwise.<br>\n                Example: <code>isAnagram(\"listen\", \"silent\")</code> should return <code>true</code>.`,\n                functionName: 'isAnagram',\n                testCases: [\n                    { input: [\"listen\", \"silent\"], expected: true },\n                    { input: [\"hello\", \"world\"], expected: false },\n                    { input: [\"anagram\", \"nagaram\"], expected: true },\n                    { input: [\"rat\", \"car\"], expected: false }\n                ]\n            },\n            {\n                description: `Your Objective: Write a function named <code>capitalizeWords</code> that takes a string and returns it with the first letter of each word capitalized.<br>\n                Example: <code>capitalizeWords(\"hello world\")</code> should return <code>\"Hello World\"</code>.`,\n                functionName: 'capitalizeWords',\n                testCases: [\n                    { input: \"hello world\", expected: \"Hello World\" },\n                    { input: \"javaScript is awesome\", expected: \"JavaScript Is Awesome\" },\n                    { input: \"a b c\", expected: \"A B C\" },\n                    { input: \"\", expected: \"\" }\n                ]\n            }\n        ];\n\n        let currentQuestionIndex = 0;\n\n        function showQuestion() {\n            const question = questions[currentQuestionIndex];\n            document.getElementById('question').innerHTML = `<div class=\"instructions\">${question.description}</div>`;\n            document.getElementById('result').innerText = '';\n            document.getElementById('testResults').innerHTML = '';\n        }\n\n        function runTest() {\n            let resultElement = document.getElementById('result');\n            let testResultsElement = document.getElementById('testResults');\n            testResultsElement.innerHTML = ''; // Clear previous test results\n            const question = questions[currentQuestionIndex];\n            \n            try {\n                // Clear previous result\n                resultElement.innerText = '';\n\n                // Run tests\n                const fn = window[question.functionName];\n                if (typeof fn !== 'function') {\n                    throw new Error(`You need to define a function named \"${question.functionName}\".`);\n                }\n                \n                let allTestsPassed = true;\n                for (let test of question.testCases) {\n                    const actual = fn.apply(null, Array.isArray(test.input) ? test.input : [test.input]);\n                    const testResult = document.createElement('div');\n                    const expected = JSON.stringify(test.expected);\n                    const actualStr = JSON.stringify(actual);\n                    \n                    if (actualStr === expected) {\n                        testResult.innerText = `✅ ${question.functionName}(${JSON.stringify(test.input)}) returned ${actualStr}, as expected.`;\n                        testResult.style.color = 'green';\n                    } else {\n                        testResult.innerText = `❌ ${question.functionName}(${JSON.stringify(test.input)}) returned ${actualStr}, expected ${expected}.`;\n                        testResult.style.color = 'red';\n                        allTestsPassed = false;\n                    }\n                    testResultsElement.appendChild(testResult);\n                }\n                \n                if (allTestsPassed) {\n                    resultElement.innerText = 'All tests passed! Great job!';\n                    resultElement.style.color = 'green';\n                } else {\n                    resultElement.innerText = 'Some tests failed. Please check the details above.';\n                    resultElement.style.color = 'red';\n                }\n            } catch (error) {\n                resultElement.innerText = error.message;\n                resultElement.style.color = 'red';\n            }\n        }\n\n        function nextQuestion() {\n            if (currentQuestionIndex < questions.length - 1) {\n                currentQuestionIndex++;\n                showQuestion();\n            }\n        }\n\n        function previousQuestion() {\n            if (currentQuestionIndex > 0) {\n                currentQuestionIndex--;\n                showQuestion();\n            }\n        }\n\n        // Initialize the first question\n        showQuestion();\n\n"
}