{
  "html": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Document</title>\n    <script defer src=\"workshopIntervals.js\"></script>\n  </head>\n\n  <body>\n    <div id=\"timeout-example\">\n      <h2>Timeout Example</h2>\n      <p>Click the button to trigger a timeout event.</p>\n      <button id=\"click\">Click</button>\n      <h1 id=\"output\"></h1>\n      <label for=\"text-input\">Enter some text:</label>\n      <input id=\"text-input\" type=\"text\" />\n    </div>\n\n    <div id=\"interval-example\">\n      <h2>Stopwatch Example</h2>\n      <p>Use the buttons below to start, stop, or reset the stopwatch.</p>\n      <h2 id=\"stopwatch-output\">00:00:00.0</h2>\n      <div class=\"buttons\">\n        <button id=\"start\">Start</button>\n        <button id=\"stop\">Stop</button>\n        <button id=\"reset\">Reset</button>\n      </div>\n    </div>\n  </body>\n</html>\n",
  "css": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: 'Helvetica Neue', Arial, sans-serif;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  background-color: #f0f2f5;\n  color: #333;\n}\n\n#timeout-example,\n#interval-example {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 90%;\n  max-width: 400px;\n  padding: 30px;\n  margin: 20px;\n  background-color: #ffffff;\n  border-radius: 10px;\n  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.15);\n  transition: transform 0.2s ease;\n}\n\n#timeout-example:hover,\n#interval-example:hover {\n  transform: scale(1.02);\n}\n\nh2 {\n  font-size: 1.5rem;\n  color: #333;\n  margin-bottom: 10px;\n  font-weight: bold;\n}\n\np {\n  color: #666;\n  font-size: 0.95rem;\n  text-align: center;\n  margin-bottom: 20px;\n}\n\nbutton {\n  padding: 12px 25px;\n  margin-top: 15px;\n  margin-bottom: 10px;\n  border: none;\n  border-radius: 8px;\n  background-color: #007bff;\n  color: #fff;\n  font-weight: 600;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease, transform 0.1s ease;\n}\n\nbutton:hover {\n  background-color: #0056b3;\n  transform: translateY(-2px);\n}\n\nbutton:active {\n  background-color: #003f82;\n}\n\n#timeout-example #text-input {\n  padding: 10px;\n  margin-top: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  width: 100%;\n  max-width: 250px;\n}\n\nlabel {\n  font-size: 0.9rem;\n  color: #666;\n  margin-top: 10px;\n}\n\n#stopwatch-output {\n  font-size: 2.5rem;\n  color: #333;\n  margin-bottom: 20px;\n  font-weight: bold;\n}\n\n.buttons {\n  display: flex;\n  gap: 10px;\n}\n\n.buttons button {\n  flex: 1;\n  padding: 12px 20px;\n}\n\n#click {\n  background-color: #28a745;\n}\n\n#click:hover {\n  background-color: #218838;\n}\n\n#click:active {\n  background-color: #1e7e34;\n}\n",
  "js": "// Timers\n// setTimeout, setInterval, cancelling timeouts, intervals\n\n// grab our Click button\nconst clickBtn = document.getElementById(\"click\");\nconst textInput = document.getElementById(\"text-input\");\nconst textOutput = document.getElementById(\"output\");\n\nlet typingTimeoutId;\n\ntextInput.addEventListener(\"keyup\", function (event) {\n  // Clear any previously running time outs\n  clearTimeout(typingTimeoutId);\n  // Start a new timeout\n  typingTimeoutId = setTimeout(function () {\n    textOutput.innerText = event.target.value;\n  }, 300);\n});\n\n// Basic setTimeout example\nclickBtn.addEventListener(\"click\", function () {\n  let timeoutId;\n  timeoutId = setTimeout(function () {\n    alert(\"Hello.. with some delay!\");\n  }, 1000);\n  console.log(timeoutId);\n});\n\n// setInterval\n\n// grab our elements\n\nlet stopwatchIntervalId; // undefined\nlet timeInMs = 0;\n\nconst stopwatchOutput = document.getElementById(\"stopwatch-output\");\nconst startBtn = document.getElementById(\"start\");\nconst stopBtn = document.getElementById(\"stop\");\nconst resetBtn = document.getElementById(\"reset\");\n\nfunction msToTime(duration) {\n  console.log(\"hello\");\n  let milliseconds = Math.floor((duration % 1000) / 100);\n  let seconds = Math.floor((duration / 1000) % 60);\n  let minutes = Math.floor((duration / (1000 * 60)) % 60);\n  let hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n\n  hours = hours < 10 ? \"0\" + hours : hours;\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n  return hours + \":\" + minutes + \":\" + seconds + \".\" + milliseconds;\n}\n\n// const id = setInterval(whatToDo, howOften);\n// const id = setInterval(gameLoop, 16);\n\nfunction stopwatchStart() {\n  // create a new interval\n  if (stopwatchIntervalId === undefined) {\n    stopwatchIntervalId = setInterval(function () {\n      timeInMs += 100;\n      stopwatchOutput.innerText = msToTime(timeInMs);\n    }, 100);\n  } else {\n    alert(\"Stopwatch is already running!!\");\n  }\n}\n\nfunction stopwatchStop() {\n  // cancel the interval\n  clearInterval(stopwatchIntervalId);\n  stopwatchIntervalId = undefined;\n}\n\nfunction stopwatchReset() {\n  // cancel the interval, AND reset the output\n  stopwatchStop();\n  timeInMs = 0;\n  stopwatchOutput.innerText = timeInMs;\n}\n\n// add event listeners\nstartBtn.addEventListener(\"click\", stopwatchStart);\nstopBtn.addEventListener(\"click\", stopwatchStop);\nresetBtn.addEventListener(\"click\", stopwatchReset);\n\n// Promises\n\n// Fetch\n\n// Game Building with Classes\n"
}